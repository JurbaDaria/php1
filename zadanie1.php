<html> <?php
    $a = 0;
    $b = 0;
    for( $i=0; $i<=5; $i++ )
    {
        $a += 10;
        $b += 5;
    }
    echo "<br />Конец цикла, и значение a = " . $a . ", а значение b = " . $b;
?>

<!-- // Цикл for в данном скрипте используется для выполнения повторяющегося действия - увеличения переменных 
$a и $b на 10 и 5 соответственно. При каждом проходе цикла переменная $i увеличивается на 1, и когда она достигает значения 6,
 цикл завершается.
Измененный код с выводом всех промежуточных значений $a и $b: -->

<?php
$a = 0;
$b = 0;
for ($i = 0; $i <= 5; $i++) {
    $a += 10;
    $b += 5;
    echo "<br />i = $i, a = $a, b = $b";
}
echo "<br />Конец цикла, и значение a = " . $a . ", а значение b = " . $b;
?>

<p>
<!-- //Задание 2
//1.	Добавьте следующий скрипт: -->
<?php
    $i = 0;
    $num = 50;
    while( $i < 10)
    {
        $num--;
        $i++;
    }
    echo ("<br />Цикл завершен на i = $i шаге и num = $num" );
?>
<!-- //В этом скрипте используется цикл while, который выполняет тело цикла до тех пор, пока условие ($i < 10) истинно.
// В каждой итерации переменная $num уменьшается на 1, а переменная $i увеличивается на 1. 
 //При достижении значения $i равного 10, цикл завершается.

//4.	Поменяйте скрипт так чтобы, выводились, дополнительно, и все промежуточные значения для a и b.
//Измененный код с выводом всех промежуточных значений $num: -->
<?php
$i = 0;
$num = 50;
while ($i < 10) {
    $num--;
    $i++;
    echo "<br />i = $i, num = $num";
}
echo "<br />Цикл завершен на i = $i шаге и num = $num";
?>

<p>
<!-- Задание 3
1.	Добавьте следующий скрипт: -->
<?php

    $adaos = 7;
    $pret = 120;
    do{
		$pret=$pret + $adaos;
		$adaos++;
    }
    while( $adaos < 10 );
    echo ("<br />Новая цена товара будет -- $pret" );
?>
<!-- В скрипте использованы следующие команды и операторы:
$adaos = 7: для присвоения переменной $adaos значения 7;
$pret = 120: для присвоения переменной $pret значения 120;
do { ... } while ( ... ): для создания цикла, который выполняет указанный блок кода до тех пор, пока условие в скобках while истинно;
$pret = $pret + $adaos; и $adaos++: для увеличения значения $pret на $adaos и увеличения значения $adaos на 1; -->
<!-- echo("Текущая цена товара: $pret<br>");: для вывода промежуточных значений цены товара;
echo("<br>Новая цена товара будет: $pret");: для вывода сообщения о новой цене товара. -->
<!-- Различия между циклами FOR, WHILE и         DO...WHILE заключаются в следующем:
FOR: используется для выполнения цикла с фиксированным количеством повторений. Цикл состоит из трех частей: инициализация (начальное значение), условие продолжения цикла и изменение значения на каждой итерации.

for (инициализация; условие; изменение) {
    // блок кода, который будет выполнен на каждой итерации цикла
}

•	WHILE: используется для выполнения цикла, пока условие истинно. Цикл состоит из одного условия, которое проверяется на каждой итерации. Цикл может выполняться ноль или более раз.

while (условие) {
    // блок кода, который будет выполнен на каждой итерации цикла
}

•	DO...WHILE: похож на цикл WHILE, но блок кода выполняется по крайней мере один раз, даже если условие не истинно. Цикл состоит из блока кода и условия, которое проверяется после каждой итерации.

do {
    // блок кода, который будет выполнен на каждой итерации цикла
} while (условие); -->
<p>
<!-- Задание 4
1.	Создайте новый .php файл со следующим содержимом: -->
<!DOCTYPE html>
<html>
<head>
	<meta charset=utf-8 />
	<title>Документ без названия</title>
</head>
<body>
<?php
	//определение двумерного массива
    $noteInfo = array( 
		array (1, "Иванов", "Иван", 7),
		array (2, "Ковалев", "Елина", 9),
		array (3, "Аванесов", "Татиана", 8),
		array (4, "Гурэу", "Ана", 10),
		array (5, "Дедин", "Кэтэлин",  9),
		array (6, "Китороагэ", "Вера",  8),
		array (7, "Жосан", "Сергей",  7)
    );
?>
<table border = "1">
	<tr style = "background-color: green; color: white">
	<th colspan = "4">Оценки учеников 10-го класса, по информатике</th>
	</tr>
	<tr style = "background-color: green; color: white">
		<th>П.н.</th>
		<th>Фамилия</th>
		<th>Имя</th>
		<th>Оценка</th>
	</tr>
	<?php
         	for ($linie = 0; $linie < count($noteInfo); $linie++) {
	echo "<tr>";
	for ($coloana = 0; $coloana <= 3; $coloana++) {
		echo "<td>" . $noteInfo[$linie][$coloana] . "</td>";
	}
	echo "</tr>";
}
?>
</table>
</body>
</html>
<!-- 2.	Запустите скрипт и проанализируйте результат.
Новый .php файл содержит HTML-разметку с таблицей, в которой выводятся данные из двумерного массива $noteInfo, содержащего информацию об учениках и их оценках.
После запуска скрипта, в браузере будет отображена таблица с данными из массива $noteInfo.
3.	Добавим две новые строчки с данными в массив $noteInfo, и изменим цикл for таким образом, чтобы он выводил все строки и столбцы массива:

4.	Добавьте еще 2 строчки с данными в массив и исправьте скрипт так что бы выводились все данные, в том числе и добавленные.  -->

<?php
    function average($array) {
        $sum = 0;
        foreach($array as $element) {
            $sum += $element[3];
        }
        $average = $sum / count($array);
        echo "Средняя оценка учеников по информатике: " . $average;
    }
    
    average($noteInfo);
?>


<!-- 4.	Функция для вычисления средней оценки учеников по информатике имеет следующий алгоритм:
•	Вначале функции создаются две переменные: $total для хранения суммы всех оценок и $count для хранения количества оценок.
•	Затем функция перебирает каждый элемент двумерного массива $noteInfo с помощью цикла foreach.
•	Для каждого элемента, проверяется оценка студента, которая находится в третьем столбце массива.
•	Если оценка является числом, то переменная $total увеличивается на значение этой оценки, а переменная $count увеличивается на 1.
•	В конце функция вычисляет среднюю оценку как отношение суммы всех оценок к их количеству, и выводит ее на экран с помощью функции echo.

5.	Напишите пользовательскую функцию, в которой вы вычислите среднюю оценку учеников по информатике и вывoдите её на экран. Не забудьте вызвать функцию!
Алгоритм, внедренный в функцию averageNote, вычисляет среднюю оценку учеников по информатике. В начале функции создается переменная $sum и присваивается значение 0, которая будет использоваться для суммирования всех оценок учеников. Затем происходит цикл foreach, в котором каждая оценка в массиве $noteInfo складывается с переменной $sum. После этого вычисляется среднее значение, разделив сумму всех оценок на количество оценок в массиве. И, наконец, функция выводит на экран сообщение с результатом вычислений.

6.	Объясните алгоритм, внедренный в функцию.
Функция goodNotes подсчитывает количество учеников, у которых оценка по информатике больше 8. В начале функции создается переменная $count и присваивается значение 0, которая будет использоваться для подсчета количества учеников с хорошей оценкой. Затем происходит цикл foreach, в котором для каждой оценки проверяется, является ли она больше 8. Если да, то переменная $count увеличивается на единицу. В конце функция выводит на экран сообщение с результатом подсчета.

7.	Напишите пользовательскую функцию, в которой вы считаете сколько учеников имеют оценку больше 8 по информатике и вывoдите это число на экран.
Алгоритм, внедренный в функцию goodNotes, работает следующим образом:
a.	В начале функции создается переменная $count и инициализируется значением 0.
b.	Затем функция перебирает каждый элемент двумерного массива $noteInfo с помощью цикла foreach.
c.	Для каждого элемента, проверяется оценка студента, которая находится в третьем столбце массива.
d.	Если оценка больше 8, то переменная $count увеличивается на 1.
e.	В конце функция выводит на экран сообщение, содержащее количество студентов, получивших оценку больше 8 по информатике.
 -->

<p>
 <!DOCTYPE html>
<html>
<head>
    <title>Шахматная доска</title>
    <style type="text/css">
        table {
            border-collapse: collapse;
            margin: auto;
        }
        td {
            width: 50px;
            height: 50px;
            text-align: center;
        }
        .black {
            background-color: #696969;
            color: #fff;
        }
        .white {
            background-color: #f0f0f0;
            color: #000;
        }
        .column-label {
            font-weight: bold;
            font-size: 20px;
            color: #000;
        }
        .row-label {
            font-weight: bold;
            font-size: 20px;
            color: #000;
        }
    </style>
</head>
<body>
    <table>
        <tr>
            <td></td>
            <?php for ($col=0; $col<8; $col++) { ?>
                <td class="column-label"><?php echo chr(65 + $col); ?></td>
            <?php } ?>
            <td></td>
        </tr>
        <?php for ($row=1; $row<=8; $row++) { ?>
            <tr>
                <td class="row-label"><?php echo $row; ?></td>
                <?php for ($col=1; $col<=8; $col++) { ?>
                    <?php $total = $row + $col; ?>
                    <?php if ($total % 2 == 0) { ?>
                        <td class="white"></td>
                    <?php } else { ?>
                        <td class="black"></td>
                    <?php } ?>
                <?php } ?>
                <td class="row-label"><?php echo $row; ?></td>
            </tr>
        <?php } ?>
        <tr>
            <td></td>
            <?php for ($col=0; $col<8; $col++) { ?>
                <td class="column-label"><?php echo chr(65 + $col); ?></td>
            <?php } ?>
            <td></td>
        </tr>
    </table>
</body>
</html>
<!-- В этом коде добавляются новые строки таблицы для каждой буквы столбца и каждой цифры строки. 
Для букв используется функция chr(), которая преобразует числовое значение ASCII в соответствующий символ. 
Классы column-label и row-label используются для определения стилей текста, отображающего буквы и цифры. -->

</html>
<!DOCTYPE html> 
<html> 
<head> 
<title>Programming language</title> 
<link rel="stylesheet" type="text/css" href="homework1style.css"> 
</head> 
<body> 


<ul id="menu-bar"> 
<li class="active"><a href="#">Курикулум</a></li> 
<li><a href="#">Другое</a> </li> 
<li><a href="#">О нас</a></li> 
<li><a href="#">Контакты</a></li> 
</ul> 

<h1 style="margin-left: 10%;">Курикулум университета</h3> 

<div class="content-widget"> 
<?php 
// задаем путь до сканируемой папки с изображениями 
$dir = 'image/'; 

// Cканируем содержимое директории 

$files = scandir($dir); 
/*scandir — Получает список файлов и каталогов, расположенных по указанному пути. 
Возвращает array, содержащий имена файлов и каталогов, расположенных по пути, переданном в параметре */ 
// если нет ошибок при сканировании 
if ($files !== false) { 
$count = 1; 
echo "<h3>1 Курс</h3>"; 
// Перебираем все файлы 
for ($i = 0; $i < count($files); $i++) { 
// Текущий каталог и родительский пропускаем 
if (($files[$i] != ".") && ($files[$i] != "..")){ 
// Получаем путь к картинке 
$path = $dir.$files[$i]; 
echo "<a href='$path'><img src='$path' alt='Imagine' /></a>"; 

if($i % 6 == 0){ 
$count++; 
echo "</div><div class=\"content-widget\"><h3>$count Курс</h3>"; 
} 
} 
} 
} 
?> 

</div> 


</body> 
</html>
